{"ast":null,"code":"var _jsxFileName = \"/Users/allisonhomem/Code/Lambda/Week10/web-module-project-async-redux/app/src/components/QuoteContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchQuotes } from '../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteContainer = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchQuotes();\n  }, []);\n\n  const handleClick = () => {\n    const randNum = Math.floor(Math.random() * props.quotes.length);\n    const quote = props.quotes[randNum];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Need an inspirational quote? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = QuoteContainer;\n\nconst mapStateToProps = state => {\n  return {\n    quotes: state.quotes,\n    quote: state.quote\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchQuotes\n})(QuoteContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteContainer\");","map":{"version":3,"sources":["/Users/allisonhomem/Code/Lambda/Week10/web-module-project-async-redux/app/src/components/QuoteContainer.js"],"names":["React","useEffect","connect","fetchQuotes","QuoteContainer","props","handleClick","randNum","Math","floor","random","quotes","length","quote","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9BJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACF,WAAN;AACH,GAFQ,EAEP,EAFO,CAAT;;AAKA,QAAMG,WAAW,GAAG,MAAM;AACtB,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcL,KAAK,CAACM,MAAN,CAAaC,MAAtC,CAAhB;AACA,UAAMC,KAAK,GAAGR,KAAK,CAACM,MAAN,CAAaJ,OAAb,CAAd;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxBD;;GAAMF,c;;KAAAA,c;;AA0BN,MAAMU,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAO;AACHJ,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MADX;AAEHE,IAAAA,KAAK,EAAEE,KAAK,CAACF;AAFV,GAAP;AAIH,CALD;;AAOA,eAAeX,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,cAAxC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchQuotes} from '../actions/index.js';\n\nconst QuoteContainer = (props) => {\n\n    useEffect(() => {\n        props.fetchQuotes();\n    },[])\n\n\n    const handleClick = () => {\n        const randNum = Math.floor(Math.random()*props.quotes.length);\n        const quote = props.quotes[randNum];\n    }\n\n    return(\n        <div>\n            <h2> Need an inspirational quote? </h2>\n            <button onClick={handleClick}>Click Here!</button>\n\n            <div>\n                <p></p>\n                <h4></h4>\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        quotes: state.quotes,\n        quote: state.quote\n    }\n}\n\nexport default connect(mapStateToProps, {fetchQuotes})(QuoteContainer);"]},"metadata":{},"sourceType":"module"}
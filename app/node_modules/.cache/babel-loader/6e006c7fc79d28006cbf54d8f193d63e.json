{"ast":null,"code":"import { FETCH_QUOTES_SUCCESS, FETCH_QUOTES_FAIL, GET_RANDOM_QUOTE } from '../actions/index.js';\nexport const initialState = {\n  quotes: [],\n  quote: {},\n  error: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_QUOTES_SUCCESS:\n      return { ...state,\n        quotes: action.payload\n      };\n\n    case FETCH_QUOTES_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_RANDOM_QUOTE:\n      return { ...state,\n        quote: state.quotes[Math.floor(Math.random() * props.quotes.length)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/allisonhomem/Code/Lambda/Week10/web-module-project-async-redux/app/src/reducers/index.js"],"names":["FETCH_QUOTES_SUCCESS","FETCH_QUOTES_FAIL","GET_RANDOM_QUOTE","initialState","quotes","quote","error","reducer","state","action","type","payload","Math","floor","random","props","length"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,iBAA/B,EAAkDC,gBAAlD,QAA0E,qBAA1E;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,KAAK,EAAE,EAFiB;AAGxBC,EAAAA,KAAK,EAAC;AAHkB,CAArB;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,oBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAFZ,OAAP;;AAIJ,SAAKV,iBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKT,gBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACJ,MAAN,CAAcQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcC,KAAK,CAACX,MAAN,CAAaY,MAAtC,CAAd;AAFJ,OAAP;;AAIJ;AACI,aAAOR,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import { FETCH_QUOTES_SUCCESS, FETCH_QUOTES_FAIL, GET_RANDOM_QUOTE } from '../actions/index.js';\n\nexport const initialState = {\n    quotes: [],\n    quote: {},\n    error:\"\"\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case FETCH_QUOTES_SUCCESS:\n            return({\n                ...state,\n                quotes: action.payload\n            })\n        case FETCH_QUOTES_FAIL:\n            return({\n                ...state,\n                error: action.payload\n            })\n        case GET_RANDOM_QUOTE:\n            return({\n                ...state,\n                quote: state.quotes[ Math.floor(Math.random()*props.quotes.length)]\n            })\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
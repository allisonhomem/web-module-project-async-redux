{"ast":null,"code":"var _jsxFileName = \"/Users/allisonhomem/Code/Lambda/Week10/web-module-project-async-redux/app/src/components/QuoteContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchQuotes, getRandomQuote } from '../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteContainer = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchQuotes();\n  }, []);\n\n  const handleClick = () => {\n    props.getRandomQuote();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Need an inspirational quote? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), props.quote !== {} && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.quote.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.quote.author === null ? \"anonymous\" : props.quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = QuoteContainer;\n\nconst mapStateToProps = state => {\n  return {\n    quotes: state.quotes,\n    quote: state.quote\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchQuotes,\n  getRandomQuote\n})(QuoteContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteContainer\");","map":{"version":3,"sources":["/Users/allisonhomem/Code/Lambda/Week10/web-module-project-async-redux/app/src/components/QuoteContainer.js"],"names":["React","useEffect","connect","fetchQuotes","getRandomQuote","QuoteContainer","props","handleClick","quote","text","author","mapStateToProps","state","quotes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,qBAA1C;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9BL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACH,WAAN;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACtBD,IAAAA,KAAK,CAACF,cAAN;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIMD,KAAK,CAACE,KAAN,KAAc,EAAf,iBAAsB;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACnB;AAAA,kBAAIF,KAAK,CAACE,KAAN,CAAYC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADmB,eAEnB;AAAA,kBAAMH,KAAK,CAACE,KAAN,CAAYE,MAAZ,KAAqB,IAAtB,GAA8B,WAA9B,GAA2CJ,KAAK,CAACE,KAAN,CAAYE;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFmB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtBD;;GAAML,c;;KAAAA,c;;AAwBN,MAAMM,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACC,MADX;AAEHL,IAAAA,KAAK,EAAEI,KAAK,CAACJ;AAFV,GAAP;AAIH,CALD;;AAOA,eAAeN,OAAO,CAACS,eAAD,EAAkB;AAACR,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAwDC,cAAxD,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchQuotes, getRandomQuote} from '../actions/index.js';\n\nconst QuoteContainer = (props) => {\n\n    useEffect(() => {\n        props.fetchQuotes();\n    },[])\n\n    const handleClick = () => {\n        props.getRandomQuote();\n    }\n\n    return(\n        <div className='page'>\n            <h2> Need an inspirational quote? </h2>\n            <button onClick={handleClick}>Click Here!</button>\n\n            {(props.quote!=={}) && <div className='quote_box'>\n                <p>{props.quote.text}</p>\n                <h4>{(props.quote.author===null) ? \"anonymous\": props.quote.author}</h4>\n            </div>}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        quotes: state.quotes,\n        quote: state.quote\n    }\n}\n\nexport default connect(mapStateToProps, {fetchQuotes, getRandomQuote})(QuoteContainer);"]},"metadata":{},"sourceType":"module"}
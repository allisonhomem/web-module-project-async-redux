{"ast":null,"code":"var _jsxFileName = \"/Users/allisonhomem/Code/Lambda/Week10/web-module-project-async-redux/app/src/components/QuoteContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchQuotes } from '../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteContainer = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchQuotes();\n  }, []);\n  console.log(props.quotes);\n\n  const handleClick = () => {};\n\n  const generateQuote = () => {\n    const randNum = props.quotes[Math.floor(Math.random * props.quotes.length)];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Need an inspirational quote? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Click Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = QuoteContainer;\n\nconst mapStateToProps = state => {\n  return {\n    quotes: state.quotes\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchQuotes\n})(QuoteContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteContainer\");","map":{"version":3,"sources":["/Users/allisonhomem/Code/Lambda/Week10/web-module-project-async-redux/app/src/components/QuoteContainer.js"],"names":["React","useEffect","connect","fetchQuotes","QuoteContainer","props","console","log","quotes","handleClick","generateQuote","randNum","Math","floor","random","length","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9BJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACF,WAAN;AACH,GAFQ,EAEP,EAFO,CAAT;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;;AAEA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxB,UAAMC,OAAO,GACbN,KAAK,CAACG,MAAN,CAAaI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAYT,KAAK,CAACG,MAAN,CAAaO,MAApC,CAAb,CADA;AAEH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxBD;;GAAMX,c;;KAAAA,c;;AA0BN,MAAMY,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAO;AACHT,IAAAA,MAAM,EAAES,KAAK,CAACT;AADX,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,cAAxC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchQuotes} from '../actions/index.js';\n\nconst QuoteContainer = (props) => {\n\n    useEffect(() => {\n        props.fetchQuotes();\n    },[])\n\n    console.log(props.quotes);\n\n    const handleClick = () => {\n\n    }\n\n    const generateQuote = () => {\n        const randNum = \n        props.quotes[Math.floor(Math.random*props.quotes.length)];\n    }\n\n    return(\n        <div>\n            <h2> Need an inspirational quote? </h2>\n            <button>Click Here!</button>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        quotes: state.quotes\n    }\n}\n\nexport default connect(mapStateToProps, {fetchQuotes})(QuoteContainer);"]},"metadata":{},"sourceType":"module"}